services:
  client:
    # build: ./client
    image: aymaneatigui/feed-client
    container_name: client_c
    env_file:
      - ./client/.env.docker
    ports:
      - "5173:5173"
    stdin_open: true
    depends_on:
      - server
  server:
    # build: ./server
    image: aymaneatigui/feed-server
    container_name: server_c
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env.docker
    networks:
      - mongo_replica
    depends_on:
      - rs0
      - rs1
      - rs2
      - setupRs

  rs0:
    container_name: rs0_c
    image: mongo
    ports:
      - "27018:27017"
    command: --replSet "rs"
    volumes:
      - rs0_data:/data/db
    networks:
      - mongo_replica
  rs1:
    container_name: rs1_c
    image: mongo
    ports:
      - "27019:27017"
    command: --replSet "rs"
    volumes:
      - rs1_data:/data/db
    networks:
      - mongo_replica
  rs2:
    container_name: rs2_c
    image: mongo
    ports:
      - "27020:27017"
    command: --replSet "rs"
    volumes:
      - rs2_data:/data/db
    networks:
      - mongo_replica
  setupRs:
    container_name: setupRs_c
    image: mongo
    volumes:
      - ./database/Data:/app-data/json
      - ./database/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    depends_on:
      - rs0
      - rs1
      - rs2
    command: bash /docker-entrypoint-initdb.d/init-mongo.sh
    networks:
      - mongo_replica
volumes:
  rs0_data:
  rs1_data:
  rs2_data:
networks:
  mongo_replica:
    driver: bridge